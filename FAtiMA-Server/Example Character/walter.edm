{
	"root": {
		"classId": 0,
		"ActionTendencies": [
			{
				"Action": "Action(HARVEST, -, -, -, -)",
				"Target": "[GUID]",
				"Layer": "Behaviour",
				"Conditions": {
					"Set": [ "World(Phase) != night", "IsBusy(SELF) = False", "InSight([GUID]) = True", "IsHarvestable([GUID]) = True" ]
				},
				"Priority": 1
			},
			{
				"Action": "Action(EQUIP, [axe], -, -, -)",
				"Target": "-",
				"Layer": "Behaviour",
				"Conditions": {
					"Set": [ "World(Phase) != night", "IsBusy(SELF) = False", "IsTreeNearby(SELF) = True", "Entity([axe]) = axe", "InInventory([axe]) = True" ]
				},
				"Priority": 1
			},
			{
				"Action": "Action(CHOP, -, -, -, -)",
				"Target": "[GUID]",
				"Layer": "Behaviour",
				"Conditions": {
					"Set": [ "World(Phase) != night", "IsBusy(SELF) = False", "Entity([axe]) = axe", "IsEquipped([axe]) = True", "InSight([GUID]) = True", "IsChoppable([GUID]) = True" ]
				},
				"Priority": 1
			},
			{
				"Action": "Action(BUILD, -, -, -, axe)",
				"Target": "-",
				"Layer": "Behaviour",
				"Conditions": {
					"Set": [ "World(Phase) != night", "IsBusy(SELF) = False", "HasAxe(SELF) = False", "Entity([flint]) = flint", "InInventory([flint]) = True", "Quantity([flint]) >= 1", "Entity([twigs]) = twigs", "InInventory([twigs]) = True", "Quantity([twigs]) >= 1" ]
				},
				"Priority": 1
			},
			{
				"Action": "Action(EQUIP, [pickaxe], -, -, -)",
				"Target": "-",
				"Layer": "Behaviour",
				"Conditions": {
					"Set": [ "World(Phase) != night", "Goal(SELF) = None", "IsBusy(SELF) = False", "Entity([pickaxe]) = pickaxe", "InSight([GUID]) = True", "IsMineable([GUID]) = True" ]
				},
				"Priority": 1
			},
			{
				"Action": "Action(MINE, -, -, -, -)",
				"Target": "[GUID]",
				"Layer": "Behaviour",
				"Conditions": {
					"Set": [ "World(Phase) != night", "IsBusy(SELF) = False", "Entity([pickaxe]) = pickaxe", "IsEquipped([pickaxe]) = True", "InSight([GUID]) = True", "IsMineable([GUID]) = True" ]
				},
				"Priority": 1
			},
			{
				"Action": "Action(BUILD, -, -, -, pickaxe)",
				"Target": "-",
				"Layer": "Behaviour",
				"Conditions": {
					"Set": [ "World(Phase) != night", "IsBusy(SELF) = False", "HasPickaxe(SELF) = False", "Entity([flint]) = flint", "InInventory([flint]) = True", "Quantity([flint]) >= 2", "Entity([twigs]) = twigs", "InInventory([twigs]) = True", "Quantity([twigs]) >= 2" ]
				},
				"Priority": 1
			},
			{
				"Action": "Action(EAT, -, -, -, -)",
				"Target": "[food]",
				"Layer": "Behaviour",
				"Conditions": {
					"Set": [ "World(Phase) != night", "IsBusy(SELF) = False", "Hunger(SELF) < 40", "InInventory([food]) = True", "IsEdible([food]) = True", "IsCookable([food]) = False" ]
				},
				"Priority": 1
			},
			{
				"Action": "Action(EAT, -, -, -, -)",
				"Target": "[food]",
				"Layer": "Behaviour",
				"Conditions": {
					"Set": [ "World(Phase) != night", "IsBusy(SELF) = False", "Hunger(SELF) < 40", "InInventory([food]) = True", "IsEdible([food]) = True" ]
				},
				"Priority": -1
			},
			{
				"Action": "Action(BUILD, -, [x], [z], campfire)",
				"Target": "-",
				"Layer": "Behaviour",
				"Conditions": {
					"Set": [ "World(Phase) = night", "InLight(SELF) = False", "Entity([cutgrass]) = cutgrass", "InInventory([cutgrass]) = True", "Quantity([cutgrass]) >= 3", "Entity([log]) = log", "InInventory([log]) = True", "Quantity([log]) >= 2", "PosX(SELF) = [x]", "PosZ(SELF) = [z]" ]
				},
				"Priority": 4
			},
			{
				"Action": "Action(BUILD, -, -, -, torch)",
				"Target": "-",
				"Layer": "Behaviour",
				"Conditions": {
					"Set": [ "World(Phase) = night", "InLight(SELF) = False", "Entity([cutgrass]) = cutgrass", "InInventory([cutgrass]) = True", "Quantity([cutgrass]) >= 2", "Entity([logs]) = twigs", "InInventory([logs]) = True", "Quantity([logs]) >= 2" ]
				},
				"Priority": 2
			},
			{
				"Action": "Action(EQUIP, [torch], -, -, -)",
				"Target": "-",
				"Layer": "Behaviour",
				"Conditions": {
					"Set": [ "World(Phase) = night", "InLight(SELF) = False", "Entity([torch]) = torch", "InInventory([torch]) = True" ]
				},
				"Priority": 3
			},
			{
				"Action": "Action(UNEQUIP, [torch], -, -, -)",
				"Target": "-",
				"Layer": "Behaviour",
				"Conditions": {
					"Set": [ "World(Phase) != night", "InLight(SELF) = True", "Entity([torch]) = torch", "IsEquipped([torch]) = True" ]
				},
				"Priority": 2
			},
			{
				"Action": "Action(ADDFUEL, [fuel], -, -, -)",
				"Target": "[fueled]",
				"Layer": "Behaviour",
				"Conditions": {
					"Set": [ "World(Phase) = night", "IsBusy(SELF) = False", "InInventory([fuel]) = True", "IsFuel([fuel]) = True", "IsFueled([fueled]) = True", "InSight([fueled]) = True" ]
				},
				"Priority": 1
			},
			{
				"Action": "Action(COOK, [uncooked], -, -, -)",
				"Target": "[cooker]",
				"Layer": "Behaviour",
				"Conditions": {
					"Set": [ "World(Phase) = night", "IsBusy(SELF) = False", "InInventory([uncooked]) = True", "IsCookable([uncooked]) = True", "IsCooker([cooker]) = True", "InSight([cooker]) = True" ]
				},
				"Priority": 1
			},
			{
				"Action": "Action(EAT, -, -, -, -)",
				"Target": "[food]",
				"Layer": "Behaviour",
				"Conditions": {
					"Set": [ "World(Phase) = night", "IsBusy(SELF) = False", "Hunger(SELF) < 120", "InInventory([food]) = True", "IsEdible([food]) = True", "IsCookable([food]) = False" ]
				},
				"Priority": 1
			},
			{
				"Action": "Action(EAT, -, -, -, -)",
				"Target": "[food]",
				"Layer": "Behaviour",
				"Conditions": {
					"Set": [ "World(Phase) = night", "IsBusy(SELF) = False", "Hunger(SELF) < 120", "InInventory([food]) = True", "IsEdible([food]) = True" ]
				},
				"Priority": -1
			},
			{
				"Action": "Action(PICK, -, -, -, -)",
				"Target": "[GUID]",
				"Layer": "Behaviour",
				"Conditions": {
					"Set": [ "World(Phase) != night", "IsBusy(SELF) = False", "IsInventoryFull(SELF) = False", "IsClosest([GUID]) = True", "InSight([GUID]) = True", "IsCollectable([GUID]) = True", "IsOnWater([GUID]) = False" ]
				},
				"Priority": 1
			},
			{
				"Action": "Action(PICKUP, -, -, -, -)",
				"Target": "[GUID]",
				"Layer": "Behaviour",
				"Conditions": {
					"Set": [ "World(Phase) != night", "IsBusy(SELF) = False", "IsInventoryFull(SELF) = False", "IsClosest([GUID]) = True", "InSight([GUID]) = True", "IsPickable([GUID]) = True", "IsOnWater([GUID]) = False" ]
				},
				"Priority": 1
			},
			{
				"Action": "Action(MANUALEXTINGUISH, -, -, -, -)",
				"Target": "SELF",
				"Layer": "Behaviour",
				"Conditions": {
					"Set": [ "IsOverheating(SELF) = True" ]
				},
				"Priority": 2
			},
			{
				"Action": "Action(WANDER, -, -, -, -)",
				"Target": "-",
				"Layer": "Behaviour",
				"Conditions": {
					"Set": [ "World(Phase) != night", "IsBusy(SELF) = False" ]
				},
				"Priority": -1
			},
			{
				"Action": "Action(PICK, -, -, -, -)",
				"Target": "[GUID]",
				"Layer": "Behaviour",
				"Conditions": {
					"Set": [ "World(Phase) != night", "Goal(SELF) = Gather_resource", "IsBusy(SELF) = False", "IsInventoryFull(SELF) = False", "IsClosest([GUID]) = True", "InSight([GUID]) = True", "IsCollectable([GUID]) = True", "IsOnWater([GUID]) = False" ]
				},
				"Priority": 2
			},
			{
				"Action": "Action(PICKUP, -, -, -, -)",
				"Target": "[GUID]",
				"Layer": "Behaviour",
				"Conditions": {
					"Set": [ "World(Phase) != night", "Goal(SELF) = Gather_resource", "IsBusy(SELF) = False", "IsInventoryFull(SELF) = False", "IsClosest([GUID]) = True", "InSight([GUID]) = True", "IsPickable([GUID]) = True", "IsOnWater([GUID]) = False" ]
				},
				"Priority": 2
			},
			{
				"Action": "Action(GOHOME, -, -, -, -)",
				"Target": "[GUID]",
				"Layer": "Behaviour",
				"Conditions": {
					"Set": [ "World(Phase) != night", "IsBusy(SELF) = False", "Goal(SELF) = 2", "Home([GUID]) = True" ]
				},
				"Priority": 1
			},
			{
				"Action": "Action(WALKTO,-,[x],[z],-)",
				"Target": "-",
				"Layer": "Behaviour",
				"Conditions": {
					"Set": [ "IsPlayerNearby(SELF) = False", "Goal(SELF) = 2", "Node_x(SELF) = [x]", "Node_z(SELF) = [z]" ]
				},
				"Priority": 2
			},
			{
				"Action": "Action(BUILD, -, -, -, rope)",
				"Target": "-",
				"Layer": "Behaviour",
				"Conditions": {
					"Set": [
						"World(Phase) != night",
						"IsBusy(SELF) = False", 
						"Goal(SELF) = Build_weapon",
						"Entity([cutgrass]) = cutgrass",
						"InInventory([cutgrass]) = True",
						"Quantity([cutgrass]) >= 3"
					]
				},
				"Priority": 2
			},
			{
				"Action": "Action(BUILD, -, -, -, spear)",
				"Target": "-",
				"Layer": "Behaviour",
				"Conditions": {
					"Set": [
						"World(Phase) != night",
						"IsBusy(SELF) = False",
						"Goal(SELF) = Build_weapon",
						"HasSpear(SELF) = False",
						"Entity([flint]) = flint",
						"InInventory([flint]) = True",
						"Quantity([flint]) >= 1",
						"Entity([twigs]) = twigs",
						"InInventory([twigs]) = True",
						"Quantity([twigs]) >= 2",
						"Entity([rope]) = rope",
						"InInventory([rope]) = True",
						"Quantity([rope]) >= 1"
					]
				},
				"Priority": 3
			},
			{
				"Action": "Action(EQUIP, [spear], -, -, -)",
				"Target": "-",
				"Layer": "Behaviour",
				"Conditions": {
					"Set": [ "World(Phase) != night", "IsBusy(SELF) = False", "Entity([spear]) = spear", "InInventory([spear]) = True" ]
				},
				"Priority": 1
			},
			{
				"Action": "Action(TRAVEL, -, -, -, -)",
				"Target": "-",
				"Layer": "Behaviour",
				"Conditions": {
					"Set": [
						"World(Phase) != night",
						"IsBusy(SELF) = False",
						"IsPlayerNearby(SELF) = True",
						"Goal(SELF) = Go_travel"
					]
				},
				"Priority": 2
			},
			{
				"Action": "Action(ATTACK, -, -, -, -)",
				"Target": "[GUID]",
				"Layer": "Behaviour",
				"Conditions": {
					"Set": [ "IsBusy(SELF) = False", "InSight([GUID]) = True", "IsAttackable([GUID]) = True" ]
				},
				"Priority": 2
			}
		]
	},
	"types": [
		{
			"TypeId": 0,
			"ClassName": "EmotionalDecisionMaking.EmotionalDecisionMakingAsset, EmotionalDecisionMaking, Version=1.2.0.0, Culture=neutral, PublicKeyToken=null"
		}]
}